@using VRH.Log4Pro.MultiLanguageManager;
@using Vrh.iScheduler.Report.Lib.Areas.iSchedulerReport.Models

@model PackageEditorModel

@{
    Variables edvars = new Variables();

    string areaName = (string)ViewContext.RouteData.DataTokens["area"];
    string controllerName = (string)ViewContext.RouteData.DataTokens["controller"];
    string editorFormId = Model.BootboxId + "Form";
    object ajaxArea = new { area = areaName };
    AjaxOptions ajaxOptions = new AjaxOptions()
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        UpdateTargetId = Model.BootboxId + "-body",
    };
    object ajaxAttributes = new { id = editorFormId };

    Type titletype = Model.PackageId <= 0 ? typeof(WordCodes.iSchedulerReport.Editor.Titles.PackageNew) : typeof(WordCodes.iSchedulerReport.Editor.Titles.PackageUpdate);
    ViewBag.Title = Html.Raw(MultiLanguageManager.GetTranslation(titletype));

    if (Model.SelectedReports == null)
    {
        Model.SelectedReports = new List<string>();
    }
    if (Model.SelectedFormats == null)
    {
        Model.SelectedFormats = new List<string>();
    }
}

@Styles.Render("~/Content/vrh.commontools.css")
@Styles.Render("~/Areas/iSchedulerReport/Contents/glyphicon.spin.css")
@Styles.Render("~/Areas/iSchedulerReport/Contents/Editor.css")

<style>
    .my-checkbox > input {
        width: 20px;
        height: 20px;
        position: relative;
        top: -2px;
        vertical-align: middle;
    }

    .my-checkbox > label {
        position: relative;
        display: inline-block;
        vertical-align: middle;
    }
</style>

<h2>@(ViewBag.Title)</h2>

@Html.Partial("~/Areas/DataTables/Views/DataTables/_ValidationSummary.cshtml")

@using (Ajax.BeginForm("Editor", controllerName, ajaxArea, ajaxOptions, ajaxAttributes))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.PackageId)
    
    @*A vrh.autocomplete számára szükséges rejtett inputok. Ide kerül a kiválasztott elem Value értéke.*@
    @Html.HiddenFor(x => x.PackageRolegroups)   
    @Html.HiddenFor(x => x.PackageUsers)        

    @*GET és POST között utazó értékek.*@
    @Html.HiddenFor(x => x.BootboxId)           
    @Html.HiddenFor(x => x.ConnectionString)
    @Html.HiddenFor(x => x.SourceOfCalling)
    @Html.HiddenFor(x => x.RoleNameMask)
    @Html.HiddenFor(x => x.RolegroupListUrl)
    @Html.HiddenFor(x => x.UserListUrl)
    @Html.HiddenFor(x => x.UsersOfRoleUrl)
    @Html.HiddenFor(x => x.CreateRoleUrl)
    @Html.HiddenFor(x => x.DeleteRoleUrl)
    @Html.HiddenFor(x => x.AssignRoleToRolegroupsUrl)
    @Html.HiddenFor(x => x.AssignRoleToUsersUrl)
    @Html.HiddenFor(x => x.ReportListUrl)
    @Html.HiddenFor(x => x.ReportFormatListUrl)
    @Html.HiddenFor(x => x.TestExecuteUrl)
    @Html.HiddenFor(x => x.XmlFile)
    @Html.HiddenFor(x => x.ResponseTimeout)

    <div class="row row-custom">
        <div class="col-lg-3">
            <div class="editor-label">
                @Html.LabelFor(x => x.PackageName)
            </div>
            <div class="editor-field">
                <div class="editor-htmlattributes">
                    @if (Model.PackageId == 0)
                    {
                        @Html.TextBoxFor(x => x.PackageName, new { @onchange = "changePackageName();" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.PackageName, new { @readonly = "" })
                    }
                </div>
                @Html.ValidationMessageFor(x => x.PackageName)
                <br>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="editor-label">
                @Html.LabelFor(x => x.PackageDescription)
            </div>
            <div class="editor-field">
                <div class="editor-htmlattributes">
                    @Html.TextBoxFor(x => x.PackageDescription)
                </div>
                @Html.ValidationMessageFor(x => x.PackageDescription)
                <br>
            </div>
        </div>
        <div class="col-lg-2">
            <div class="editor-label">
                @Html.LabelFor(x => x.PackageGroupId)
            </div>
            <div class="editor-field">
                <div class="editor-htmlattributes">
                    @Html.TextBoxFor(x => x.PackageGroupId, (String.IsNullOrEmpty(Model.PackageGroupId) ? null : new { @readonly = "" }))
                </div>
                @Html.ValidationMessageFor(x => x.PackageGroupId)
                <br>
            </div>
        </div>
        <div class="col-lg-1">
            <div class="editor-label">
                @Html.LabelFor(x => x.PackageIsActive)
            </div>
            <div class="editor-field">
                <div class="editor-htmlattributes">
                    @Html.CheckBoxFor(x => x.PackageIsActive)
                </div>
            </div>
        </div>
    </div>
    <div class="row row-custom">
        <div class="col-lg-4">
            <div class="editor-label">
                @Html.LabelFor(x => x.PackageRoleName)
            </div>
            <div class="editor-field">
                <div class="editor-htmlattributes">
                    @Html.TextBoxFor(x => x.PackageRoleName, new { @readonly = "" })
                </div>
                @if (Model.PackageId > 0)
                {
                    <button id="users-of-role" type="button" class="btn btn-sm btn-default" onclick="javascript:viewUsersOfRole();">
                        @Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Buttons.UsersOfTheRole)))
                    </button>
                }
            </div>
        </div>
        <div class="col-lg-4">
            <div class="editor-label">
                @Html.LabelFor(x => x.PackageRolegroupsSelected)
            </div>
            <div class="editor-field">
                <div class="editor-htmlattributes right-inner-addon">
                    @Html.TextBoxFor(x => x.PackageRolegroupsSelected, new { autofocus = "" })
                </div>
                @Html.ValidationMessageFor(x => x.PackageRolegroupsSelected)
                <br />
            </div>
        </div>
        <div class="col-lg-4">
            <div class="editor-label">
                @Html.LabelFor(x => x.PackageUsersSelected)
            </div>
            <div class="editor-field">
                <div class="editor-htmlattributes right-inner-addon">
                    @Html.TextBoxFor(x => x.PackageUsersSelected, new { autofocus = "" })
                </div>
                @Html.ValidationMessageFor(x => x.PackageUsersSelected)
                <br />
            </div>
        </div>
    </div>

    <div class="row row-custom">
        <div class="col-lg-12">
            <table class="table table-bordered table-hover table-striped" id="packageitemtable">
                <thead>
                    <tr>
                        <th style="width:70%;">@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.TableHeads.ReportId)))</th>
                        <th style="width:20%;">@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.TableHeads.ReportExportType)))</th>
                        <th style="width:10%;">
                            <button type="button" class="btn btn-success btn-sm" style="width:100%;" onclick="javascript:addReportItem();">
                                @Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Buttons.RiportAdd)))
                            </button>
                        </th>
                    </tr>
                </thead>
                <tbody id="package-report-items"></tbody>
            </table>
        </div>
    </div>
    <div class="row row-custom">
        <div class="col-lg-12 text-right my-checkbox">
            @Html.LabelFor(x => x.IsTestExecute)
            @Html.CheckBoxFor(x => x.IsTestExecute)
        </div>
    </div>
    <div class="row row-custom">
        <div class="col-lg-12" id="buttoncontainer">
            @if (Model.PackageId > 0)
            {
                <button class="btn btn-danger" type="button" onclick="deleteTheEntirePackage(@(Model.PackageId),'@(Model.SourceOfCalling)')">
                    @Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Buttons.Delete)))
                </button>
            }
            <button class="btn btn-default"  type="button" style="float:right" data-dismiss="modal">
                @Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Buttons.Cancel)))
            </button>
            <input type="submit" class="btn btn-primary" style="float:right;margin-right:10px;"
                   value="@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Buttons.Save)))" />
        </div>
    </div>
}

<script type="text/javascript">
    function EditorConstantsInit() {    // A scriptek számára szükséges constans értékek, melyek a Html.Helper segítségével készülnek
        'use strict';

        // Üzenetek
        constEditor.MESS_WAIT = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.WaitMessage)))';
        constEditor.MESS_WAITFOREXECUTE = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.WaitForExecuteOfOperations)))';
        constEditor.MESS_SUCCESSFUL = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.OperationSuccessful)))';
        constEditor.MESS_UNSUCCESSFUL = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.OperationUnSuccessful)))';
        constEditor.MESS_NAMEISEMPTY = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.PackageNameEmpty)))';
        constEditor.MESS_USERSLISTISEMPTY = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.UsersListOfTheRoleIsEmpty)))';
        constEditor.MESS_REPORTSLISTEMPTY = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.ListOfReportsIsEmpty)))';
        constEditor.MESS_FORMATSLISTEMPTY = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.ListOfReportFormatsIsEmpty)))';
        constEditor.MESS_NOMOREREPORTSADD = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.NoMoreReportsRoAdd)))';

        // Feliratok, címkék
        constEditor.TITLE_USERSOFROLE = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Titles.UsersOfTheRole)))';
        constEditor.LABEL_USER = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Labels.User)))';
        constEditor.LABEL_EMAIL = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Labels.EmailAddress)))';

        // Url-ek
        constEditor.URL_DELETE = '@Html.Raw(Url.Action("DeletePackage", controllerName, new { area = areaName, connectionString = Model.ConnectionString, deleteRoleUrl = Model.DeleteRoleUrl.Replace(@"\", @"\\") }))';
        constEditor.URL_ROLEGROUPLIST = "@Html.Raw(Url.Content(Model.RolegroupListUrl.Replace(@"\", @"\\")))";  //nem véletlen ez az (") idézőjel
        constEditor.URL_USERLIST = '@Html.Raw(Url.Content(Model.UserListUrl.Replace(@"\",@"\\")))';
        constEditor.URL_USERSOFROLE = '@Html.Raw(Url.Content(Model.UsersOfRoleUrl.Replace(@"\",@"\\")))';
        constEditor.URL_REPORTLIST = '@Html.Raw(Url.Content(Model.ReportListUrl.Replace(@"\",@"\\")))';
        constEditor.URL_FORMATLIST = '@Html.Raw(Url.Content(Model.ReportFormatListUrl.Replace(@"\",@"\\")))';

        // Változók
        constEditor.VAR_PCKNAME = '@(edvars.PCKNAME.Name)';
        constEditor.VAR_ROLENAME = '@(edvars.ROLENAME.Name)';

        // Egyebek
        constEditor.ROLENAMEMASK = '@(Model.RoleNameMask)';
        constEditor.EditorDialogId = '@(Model.BootboxId)';
        constEditor.EditorFormId = '@(editorFormId)';

        constEditor.confirmDelete = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Editor.Messages.ConfirmDeletePackage)))';
        constEditor.labelId = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Manager.DataTables.Id)))';
        constEditor.labelName = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Manager.DataTables.Name)))';
        constEditor.labelDescription = '@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.iSchedulerReport.Manager.DataTables.Description)))';
        constEditor.labelYes = '@(Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MasterData.Dialog.Yes))))';
        constEditor.labelNo = '@(Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MasterData.Dialog.No))))';

        @foreach (string item in Model.SelectedReports)
        {
            <TEXT>constEditor.SelectedReports.push('@item');</TEXT>
        }
        @foreach (string item in Model.SelectedFormats)
        {
            <TEXT>constEditor.SelectedFormats.push('@item');</TEXT>
        }
    }
</script>
<script src="~/Scripts/vrh.commontools.js"></script>
<script src="~/Areas/iSchedulerReport/Scripts/Editor.js"></script>
