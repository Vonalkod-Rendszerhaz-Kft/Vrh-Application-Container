<?xml version="1.0" encoding="utf-8" ?>
<DataToRedisConfig>
  <Substitutions>
    <Substitution Name="PAR_ANDONVIEWFREQ">@ANDONVIEWFREQ@</Substitution>
    <Substitution Name="PAR_LCID">@LCID@</Substitution>
    <Substitution Name="PAR_REDISCS">@REDISCS@</Substitution>
    <Substitution Name="PAR_ANDONDBCS">@SQLDBCS@</Substitution>
    <Substitution Name="PAR_FREQUENCY">@FREQUENCY@</Substitution>
  
</Substitutions>
  <General>
    <Frequency>@PAR_FREQUENCY@</Frequency>
  </General>
  <Pools>
    <Pool Id="ALM" Name="ALM" Version="2.7.0" SQLconnectionString="@PAR_ANDONDBCS@" RedisConnectionString="@PAR_REDISCS@" Initialize="false" CreateInstance="true" CreateVariable="true"/>
    <Pool Id="ANDON_ASSL" Name="ANDON_ASSL" Version="1.0.0" SQLconnectionString="@PAR_ANDONDBCS@" RedisConnectionString="@PAR_REDISCS@" Initialize="true" CreateInstance="true" CreateVariable="true"/>
    <Pool Id="ANDON_SAE" Name="ANDON_SAE" Version="1.0.0" SQLconnectionString="@PAR_ANDONDBCS@" RedisConnectionString="@PAR_REDISCS@" Initialize="true" CreateInstance="true" CreateVariable="true"/>
    <Pool Id="ANDON_SAECODE" Name="ANDON_SAECODE" Version="1.0.0" SQLconnectionString="@PAR_ANDONDBCS@" RedisConnectionString="@PAR_REDISCS@" Initialize="true" CreateInstance="true" CreateVariable="true"/>
    <Pool Id="ANDON_ASSLCODE" Name="ANDON_ASSLCODE" Version="1.0.0" SQLconnectionString="@PAR_ANDONDBCS@" RedisConnectionString="@PAR_REDISCS@" Initialize="true" CreateInstance="true" CreateVariable="true"/>
    <Pool Id="ANDON_COMMON" Name="ANDON_COMMON" Version="1.0.0" SQLconnectionString="@PAR_ANDONDBCS@" RedisConnectionString="@PAR_REDISCS@" Initialize="true" CreateInstance="true" CreateVariable="true">
      <!--
			<Variables>
				<Variable Name="LCID" Type="String"/>
				<Variable Name="CURRTIME" Type="DateTime"/>
				<Variable Name="RQ1" Type="String"/>
				<Variable Name="RQ2" Type="String"/>
				<Variable Name="RQ3" Type="String"/>
				<Variable Name="RQ4" Type="String"/>
				<Variable Name="RQ5" Type="String"/>
				<Variable Name="RQ6" Type="String"/>
				<Variable Name="RQ7" Type="String"/>
				<Variable Name="RQ8" Type="String"/>
				<Variable Name="RQ9" Type="String"/>
			</Variables>
			-->
    </Pool>
  </Pools>
  <UpdateProcesses>
    <UpdateProcess Name="PROC1" Type="SQL" PoolId="ANDON_COMMON">
      <SQL InstanceKeyColumn="LCID">
        <SqlText>
          SELECT LCID,CURRTIME,TXRQ1,TXRQ2,TXRQ3,TXRQ4,TXRQ5,TXRQ6,TXRQ7,TXRQ8,TXRQ9 FROM dbo.AndonRequestNames('')
        </SqlText>
      </SQL>
    </UpdateProcess>
    <UpdateProcess Name="PROC2" Type="SQL" PoolId="ANDON_ASSL">
      <SQL InstanceKeyColumn="MACHINE_KEY">
        <!--
			<Variables>
				<Variable Name="AndonIssue1Code" Type="String" Column="rqCode1"/>
				<Variable Name="AndonIssue2Code" Type="String" Column="rqCode2"/>
				<Variable Name="AndonIssue3Code" Type="String" Column="rqCode3"/>
				<Variable Name="AndonIssue4Code" Type="String" Column="rqCode4"/>
				<Variable Name="AndonIssue5Code" Type="String" Column="rqCode5"/>
				<Variable Name="AndonIssue1Text" Type="String" Column="rqName1"/>
				<Variable Name="AndonIssue2Text" Type="String" Column="rqName2"/>
				<Variable Name="AndonIssue3Text" Type="String" Column="rqName3"/>
				<Variable Name="AndonIssue4Text" Type="String" Column="rqName4"/>
				<Variable Name="AndonIssue5Text" Type="String" Column="rqName5"/>
				<Variable Name="AndonIssue1WP" Type="String" Column="wpSN1"/>
				<Variable Name="AndonIssue2WP" Type="String" Column="wpSN2"/>
				<Variable Name="AndonIssue3WP" Type="String" Column="wpSN3"/>
				<Variable Name="AndonIssue4WP" Type="String" Column="wpSN4"/>
				<Variable Name="AndonIssue5WP" Type="String" Column="wpSN5"/>
				<Variable Name="AndonIssue1WPname" Type="String" Column="wpName1"/>
				<Variable Name="AndonIssue2WPname" Type="String" Column="wpName2"/>
				<Variable Name="AndonIssue3WPname" Type="String" Column="wpName3"/>
				<Variable Name="AndonIssue4WPname" Type="String" Column="wpName4"/>
				<Variable Name="AndonIssue5WPname" Type="String" Column="wpName5"/>
			</Variables>
			-->
        <SqlText>
          DECLARE @ANDONVIEWFREQ INT = @PAR_ANDONVIEWFREQ@;
          SELECT
          [Key] AS MACHINE_KEY
          ,[Name] AS MACHINE_NAME
          ,'' AS MWCLIENT_DISCONNECTEDASEIDLIST
          ,[PeriodeType] AS PERIOD_TYPEENUM
          ,0 AS SUSPENDMODE
          ,0 AS SWITCHMODE
          ,numofStopRequests AS AndonStopStatus
          ,CASE WHEN (DATEPART(SECOND, GETDATE()) % (@ANDONVIEWFREQ *2)) > (@ANDONVIEWFREQ-1) THEN 0 ELSE 1 END AS AndonView
          ,rqCode1 AS AndonIssue1Code,rqName1 AS AndonIssue1Text,wpSN1 AS AndonIssue1WP,wpName1 AS AndonIssue1WPname
          ,rqCode2 AS AndonIssue2Code,rqName2 AS AndonIssue2Text,wpSN2 AS AndonIssue2WP,wpName2 AS AndonIssue2WPname
          ,rqCode3 AS AndonIssue3Code,rqName3 AS AndonIssue3Text,wpSN3 AS AndonIssue3WP,wpName3 AS AndonIssue3WPname
          ,rqCode4 AS AndonIssue4Code,rqName4 AS AndonIssue4Text,wpSN4 AS AndonIssue4WP,wpName4 AS AndonIssue4WPname
          ,rqCode5 AS AndonIssue5Code,rqName5 AS AndonIssue5Text,wpSN5 AS AndonIssue5WP,wpName5 AS AndonIssue5WPname
          FROM [dbo].[MonitorData_AndonRequestQueueASSL] ('','@PAR_LCID@','ASSL',1)
        </SqlText>
      </SQL>
    </UpdateProcess>
    <UpdateProcess Name="PROC3" Type="SQL" PoolId="ANDON_ASSLCODE">
      <SQL InstanceKeyColumn="RQCODEX">
        <Variables>
          <Variable Name="RQCODE" Column="RQCODEX"/>
          <Variable Name="RQNAME" Column="RQNAMEX"/>
          <Variable Name="RQSTATUS" Column="RQSTATUSX"/>
          <Variable Name="AS1NAME" Column="AS1NAMEX"/>
          <Variable Name="AS2NAME" Column="AS2NAMEX"/>
          <Variable Name="AS3NAME" Column="AS3NAMEX"/>
          <Variable Name="AS4NAME" Column="AS4NAMEX"/>
          <Variable Name="AS5NAME" Column="AS5NAMEX"/>
        </Variables>
        <SqlText>
          DECLARE @ANDONVIEWFREQ INT = @PAR_ANDONVIEWFREQ@;
          SELECT Code AS RQCODEX
          ,CodeName AS RQNAMEX
          ,numofrequests AS RQSTATUSX
          ,CASE WHEN (DATEPART(SECOND, GETDATE()) % (@ANDONVIEWFREQ *2) &gt; (@ANDONVIEWFREQ-1)) THEN 0 ELSE 1 END AS AndonView
          ,asLinewpName1 AS AS1NAMEX,asLinewpName2 AS AS2NAMEX,asLinewpName3 AS AS3NAMEX,asLinewpName4 AS AS4NAMEX,asLinewpName5 AS AS5NAMEX
          FROM dbo.MonitorData_AndonRequestQueueCODE('','@PAR_LCID@','ASSL',1)
        </SqlText>
      </SQL>
    </UpdateProcess>
    <UpdateProcess Name="PROC4" Type="SQL" PoolId="ANDON_SAE">
      <SQL InstanceKeyColumn="SAEWPNAME">
        <SqlText>
          DECLARE @ANDONVIEWFREQ INT = @PAR_ANDONVIEWFREQ@;
          SELECT
          WP.[WorkPlaceName] AS SAEWPNAME
          ,[numofStopRequests] AS SAEWPSTATUS
          ,[rqCode1] AS RQ1,[rqCode2] AS RQ2,[rqCode3] AS RQ3,[rqCode4] AS RQ4,[rqCode5] AS RQ5
          ,CASE WHEN (DATEPART(SECOND, GETDATE()) % (@ANDONVIEWFREQ *2) &gt; (@ANDONVIEWFREQ-1)) THEN 0 ELSE 1 END AS AndonView
          FROM dbo.MonitorData_AndonRequestQueueWP('','@PAR_LCID@','SAEG',0) AS WP
        </SqlText>
      </SQL>
    </UpdateProcess>
    <UpdateProcess Name="PROC5" Type="SQL" PoolId="ANDON_SAECODE">
      <SQL InstanceKeyColumn="RQCODE">
        <SqlText>
          DECLARE @ANDONVIEWFREQ INT = @PAR_ANDONVIEWFREQ@;
          SELECT
          RC.[Code] AS RQCODE,[CodeName] AS RQNAME,[numofrequests] AS RQSTATUS
          ,CASE WHEN (DATEPART(SECOND, GETDATE()) % (@ANDONVIEWFREQ *2) &gt; (@ANDONVIEWFREQ-1)) THEN 0 ELSE 1 END AS AndonView
          ,[wpName1] AS WP1NAME,[wpName2] AS WP2NAME,[wpName3] AS WP3NAME,[wpName4] AS WP4NAME,[wpName5] AS WP5NAME
          FROM dbo.[MonitorData_AndonRequestQueueCODE]('', '@PAR_LCID@', 'SAEG',0) AS RC
        </SqlText>
      </SQL>
    </UpdateProcess>
  </UpdateProcesses>
  <UpdateBatches FirstRunTreshold="10" RepeatTreshold="5" SynchronizedUpdate="true">
    <UpdateBatch Name="BN1" Frequency="1">
      <UpdateProcesses>
        <UpdateProcess Name="PROC1"/>
      </UpdateProcesses>
    </UpdateBatch>
    <UpdateBatch Name="BN2" Frequency="@PAR_ANDONVIEWFREQ@">
      <UpdateProcesses>
        <UpdateProcess Name="PROC2"/>
        <UpdateProcess Name="PROC3"/>
        <UpdateProcess Name="PROC4"/>
        <UpdateProcess Name="PROC5"/>
      </UpdateProcesses>
    </UpdateBatch>
  </UpdateBatches>
  <InitialSQLScripts>
    <SQLScript Name="AndonRequestNames" SQLconnectionString="@PAR_ANDONDBCS@">
      IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AndonRequestNames]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
      DROP FUNCTION [dbo].[AndonRequestNames]
      GO

      SET ANSI_NULLS ON
      GO

      SET QUOTED_IDENTIFIER ON
      GO

      CREATE FUNCTION [dbo].[AndonRequestNames](@LCID  NVARCHAR(128))
      RETURNS @RET TABLE
      (
      LCID NVARCHAR(128) primary key NOT NULL,
      CURRTIME DATETIME,
      TXRQ1 NVARCHAR(1000),
      TXRQ2 NVARCHAR(1000),
      TXRQ3 NVARCHAR(1000),
      TXRQ4 NVARCHAR(1000),
      TXRQ5 NVARCHAR(1000),
      TXRQ6 NVARCHAR(1000),
      TXRQ7 NVARCHAR(1000),
      TXRQ8 NVARCHAR(1000),
      TXRQ9 NVARCHAR(1000)
      )
      AS
      BEGIN
      DECLARE @LCID2 NVARCHAR(128);
      IF @LCID = '' OR @LCID IS NULL
      BEGIN
      DECLARE C CURSOR FOR
      SELECT [LanguageCode]
      FROM [LearALM].[dbo].[i18nLanguages]
      WHERE [Active] = 1
      OPEN C;
      FETCH NEXT FROM C INTO @LCID2;
      WHILE @@FETCH_STATUS = 0
      BEGIN
      INSERT INTO @RET (LCID,CURRTIME,TXRQ1,TXRQ2,TXRQ3,TXRQ4,TXRQ5,TXRQ6,TXRQ7,TXRQ8,TXRQ9)
      SELECT
      @LCID2 AS LCID
      , GETDATE() AS CURRTIME
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '01'),'') AS TXRQ1
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '02'),'') AS TXRQ2
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '03'),'') AS TXRQ3
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '04'),'') AS TXRQ4
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '05'),'') AS TXRQ5
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '06'),'') AS TXRQ6
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '07'),'') AS TXRQ7
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '08'),'') AS TXRQ8
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID2,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '09'),'') AS TXRQ9
      FETCH NEXT FROM C INTO @LCID2;
      END
      CLOSE C;
      DEALLOCATE C;
      INSERT @RET
      SELECT
      'WC' AS LCID
      , GETDATE() AS CURRTIME
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '01'),'') AS TXRQ1
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '02'),'') AS TXRQ2
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '03'),'') AS TXRQ3
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '04'),'') AS TXRQ4
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '05'),'') AS TXRQ5
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '06'),'') AS TXRQ6
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '07'),'') AS TXRQ7
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '08'),'') AS TXRQ8
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '09'),'') AS TXRQ9
      END
      ELSE
      BEGIN
      IF @LCID = 'WC'
      BEGIN
      INSERT @RET
      SELECT
      'WC' AS LCID
      , GETDATE() AS CURRTIME
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '01'),'') AS TXRQ1
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '02'),'') AS TXRQ2
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '03'),'') AS TXRQ3
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '04'),'') AS TXRQ4
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '05'),'') AS TXRQ5
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '06'),'') AS TXRQ6
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '07'),'') AS TXRQ7
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '08'),'') AS TXRQ8
      , COALESCE((SELECT [Description] FROM [dbo].[AndonRequestCodes] Where [Code] = '09'),'') AS TXRQ9
      END
      ELSE
      BEGIN
      INSERT @RET
      SELECT
      @LCID AS LCID
      , GETDATE() AS CURRTIME
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '01'),'') AS TXRQ1
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '02'),'') AS TXRQ2
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '03'),'') AS TXRQ3
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '04'),'') AS TXRQ4
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '05'),'') AS TXRQ5
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '06'),'') AS TXRQ6
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '07'),'') AS TXRQ7
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '08'),'') AS TXRQ8
      , COALESCE((SELECT [dbo].[DataTranslation](@LCID,[Description]) FROM [dbo].[AndonRequestCodes] Where [Code] = '09'),'') AS TXRQ9
      END
      END
      RETURN
      END
    </SQLScript>
    <SQLScript Name="MonitorData_AndonRequestQueueASSL" SQLconnectionString="@PAR_ANDONDBCS@">
      IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MonitorData_AndonRequestQueueASSL]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
      DROP FUNCTION [dbo].[MonitorData_AndonRequestQueueASSL]
      GO

      SET ANSI_NULLS ON
      GO

      SET QUOTED_IDENTIFIER ON
      GO

      CREATE FUNCTION [dbo].[MonitorData_AndonRequestQueueASSL](@AsLineKey varchar(10), @LCID  varchar(10), @AsLineGroup varchar(10), @IncludeStop BIT = 0)
      RETURNS TABLE
      AS
      RETURN
      (
      WITH
      al AS (
      SELECT
      ROW_NUMBER() OVER (PARTITION BY al.[ProductionLineId] ORDER BY al.[RequestTimeStamp]) AS rownum
      ,COUNT(*) OVER (PARTITION BY al.[ProductionLineId]) AS numofRequests
      ,[ProductionLineId]
      ,[WorkStation]
      ,[AndonRequestCodeId]
      FROM [dbo].[AndonLogs] AS al
      INNER JOIN [dbo].[ProductionLines] AS pl ON al.[ProductionLineId] = pl.[Id]
      WHERE al.[Active] = 1 AND (al.[WithStop] = 0 OR al.[WithStop] = @IncludeStop)
      )
      , alStop AS (
      SELECT [ProductionLineId],COUNT(*) OVER (PARTITION BY al.[ProductionLineId]) AS withstop
      FROM [dbo].[AndonLogs] AS al
      WHERE al.[Active] = 1 AND al.[WithStop] = 1
      )
      , alAllStatus AS (
      SELECT [ProductionLineID],[PeriodeType],ROW_NUMBER() OVER(PARTITION BY [ProductionLineID] ORDER BY [Id] DESC) AS RN
      FROM [LearALM].[dbo].[DTMPeriods]
      WHERE [EndTime] IS NULL
      )
      , alStatus AS (
      SELECT [PeriodeType],[ProductionLineId]
      FROM alAllStatus
      WHERE RN = 1
      )
      SELECT pl.[Key]
      , pl.[Name]
      , @LCID  AS LCID
      , alStatus.[PeriodeType] AS PeriodeType
      , MAX(COALESCE(CONVERT(int,alStop.WithStop),0)) AS numofStopRequests
      , MAX(COALESCE(CONVERT(int,al.numofRequests),0)) AS numofRequests
      , MAX((CASE WHEN al.rownum = 1 THEN al.[WorkStation] END)) AS wpSN1
      , MAX((CASE WHEN al.rownum = 1 THEN COALESCE(wp1.[WorkPlaceName],al.[WorkStation]) END)) AS wpName1
      , COALESCE(MAX((CASE WHEN al.rownum = 1 THEN rq1.[Code] END)),'') AS rqCode1
      , MAX((CASE WHEN al.rownum = 1 THEN [dbo].[DataTranslation](@LCID,rq1.[Description]) END)) AS rqName1
      , MAX((CASE WHEN al.rownum = 1 THEN [dbo].[DataTranslation](@LCID,rq1.[Description]) +' (' +rq1.[Code]+ ')' END)) AS rqCodeName1
      , MAX((CASE WHEN al.rownum = 2 THEN al.[WorkStation] END)) AS wpSN2
      , MAX((CASE WHEN al.rownum = 2 THEN COALESCE(wp2.[WorkPlaceName],al.[WorkStation]) END)) AS wpName2
      , COALESCE(MAX((CASE WHEN al.rownum = 2 THEN rq2.[Code] END)),'') AS rqCode2
      , MAX((CASE WHEN al.rownum = 2 THEN [dbo].[DataTranslation](@LCID,rq2.[Description]) END)) AS rqName2
      , MAX((CASE WHEN al.rownum = 2 THEN [dbo].[DataTranslation](@LCID,rq2.[Description]) +' (' +rq2.[Code]+ ')' END)) AS rqCodeName2
      , MAX((CASE WHEN al.rownum = 3 THEN al.[WorkStation] END)) AS wpSN3
      , MAX((CASE WHEN al.rownum = 3 THEN COALESCE(wp3.[WorkPlaceName],al.[WorkStation]) END)) AS wpName3
      , COALESCE(MAX((CASE WHEN al.rownum = 3 THEN rq3.[Code] END)),'') AS rqCode3
      , MAX((CASE WHEN al.rownum = 3 THEN [dbo].[DataTranslation](@LCID,rq3.[Description]) END)) AS rqName3
      , MAX((CASE WHEN al.rownum = 3 THEN [dbo].[DataTranslation](@LCID,rq3.[Description]) +' (' +rq3.[Code]+ ')' END)) AS rqCodeName3
      , MAX((CASE WHEN al.rownum = 4 THEN al.[WorkStation] END)) AS wpSN4
      , MAX((CASE WHEN al.rownum = 4 THEN COALESCE(wp4.[WorkPlaceName],al.[WorkStation]) END)) AS wpName4
      , COALESCE(MAX((CASE WHEN al.rownum = 4 THEN rq4.[Code] END)),'') AS rqCode4
      , MAX((CASE WHEN al.rownum = 4 THEN [dbo].[DataTranslation](@LCID,rq4.[Description]) END)) AS rqName4
      , MAX((CASE WHEN al.rownum = 4 THEN [dbo].[DataTranslation](@LCID,rq4.[Description]) +' (' +rq4.[Code]+ ')' END)) AS rqCodeName4
      , MAX((CASE WHEN al.rownum = 5 THEN al.[WorkStation] END)) AS wpSN5
      , MAX((CASE WHEN al.rownum = 5 THEN COALESCE(wp5.[WorkPlaceName],al.[WorkStation]) END)) AS wpName5
      , COALESCE(MAX((CASE WHEN al.rownum = 5 THEN rq5.[Code] END)),'') AS rqCode5
      , MAX((CASE WHEN al.rownum = 5 THEN [dbo].[DataTranslation](@LCID,rq5.[Description]) END)) AS rqName5
      , MAX((CASE WHEN al.rownum = 5 THEN [dbo].[DataTranslation](@LCID,rq5.[Description]) +' (' +rq5.[Code]+ ')' END)) AS rqCodeName5
      FROM [dbo].[ProductionLines] AS pl
      LEFT JOIN al ON al.[ProductionLineId] = pl.[Id]
      LEFT JOIN alStop ON alStop.[ProductionLineId] = pl.[Id]
      LEFT JOIN alStatus ON alStatus.[ProductionLineId] = pl.[Id]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq1 ON rq1.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq2 ON rq2.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq3 ON rq3.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq4 ON rq4.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq5 ON rq5.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[WorkPlaces] AS wp1 ON wp1.[WorkPlaceSN] = al.[WorkStation] AND wp1.[ProductionLineId] = pl.[Id]
      LEFT JOIN [dbo].[WorkPlaces] AS wp2 ON wp2.[WorkPlaceSN] = al.[WorkStation] AND wp2.[ProductionLineId] = pl.[Id]
      LEFT JOIN [dbo].[WorkPlaces] AS wp3 ON wp3.[WorkPlaceSN] = al.[WorkStation] AND wp3.[ProductionLineId] = pl.[Id]
      LEFT JOIN [dbo].[WorkPlaces] AS wp4 ON wp4.[WorkPlaceSN] = al.[WorkStation] AND wp4.[ProductionLineId] = pl.[Id]
      LEFT JOIN [dbo].[WorkPlaces] AS wp5 ON wp5.[WorkPlaceSN] = al.[WorkStation] AND wp5.[ProductionLineId] = pl.[Id]
      WHERE pl.[Active] = 1 AND (pl.[Key] = @AsLineKey OR @AsLineKey = '') AND (pl.[Description] LIKE '%'+@AsLineGroup+'%' OR @AsLineGroup = '')
      GROUP BY pl.[Key],pl.[Name],alStatus.[PeriodeType]
      );
    </SQLScript>
    <SQLScript Name="MonitorData_AndonRequestQueueCODE" SQLconnectionString="@PAR_ANDONDBCS@">
      IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MonitorData_AndonRequestQueueCODE]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
      DROP FUNCTION [dbo].[MonitorData_AndonRequestQueueCODE]
      GO

      SET ANSI_NULLS ON
      GO

      SET QUOTED_IDENTIFIER ON
      GO

      CREATE FUNCTION [dbo].[MonitorData_AndonRequestQueueCODE](@rqCode varchar(10), @LCID  varchar(10), @AsLineGroup varchar(10), @IncludeStop BIT = 0)
      RETURNS TABLE
      AS
      RETURN
      (
      WITH
      al AS (
      SELECT
      ROW_NUMBER() OVER (PARTITION BY al.[AndonRequestCodeId] ORDER BY al.[RequestTimeStamp]) AS rownum
      ,COUNT(*) OVER (PARTITION BY al.[AndonRequestCodeId]) AS numofRequests
      ,[ProductionLineId]
      ,[WorkStation]
      ,[AndonRequestCodeId]
      FROM [dbo].[AndonLogs] AS al
      INNER JOIN [dbo].[ProductionLines] AS pl ON pl.[Id] = al.[ProductionLineId]
      WHERE al.[Active] = 1 AND (al.[WithStop] = 0 OR al.[WithStop] = @IncludeStop) AND (pl.[Description] LIKE '%'+@AsLineGroup+'%' OR @AsLineGroup = '')
      )
      SELECT
      rqCodes.[Code]
      ,@LCID AS LCID
      , [dbo].[DataTranslation](@LCID,rqCodes.[Description]) AS [Name]
      , [dbo].[DataTranslation](@LCID,rqCodes.[Description]) + ' (' + rqCodes.[Code] + ')' AS CodeName
      , MAX(COALESCE(CONVERT(int,al.numofRequests),0)) AS numofRequests
      , MAX(CASE WHEN al.rownum = 1 THEN COALESCE(pl.[Key],'') ELSE '' END) AS asLineKey1
      , MAX(CASE WHEN al.rownum = 1 THEN COALESCE(pl.[Name],'') ELSE '' END) AS asLineName1
      , MAX(CASE WHEN al.rownum = 1 THEN COALESCE(al.[WorkStation],'') ELSE '' END) AS wpId1
      , MAX(CASE WHEN al.rownum = 1 THEN COALESCE(wp.[WorkPlaceName],al.[WorkStation]) ELSE '' END) AS wpName1
      , MAX(CASE WHEN al.rownum = 1 THEN COALESCE(pl.[Name] + ' (WP:' + (CASE WHEN wp.[WorkPlaceName] IS NULL THEN al.[WorkStation] ELSE wp.[WorkPlaceName]END)+')','') ELSE '' END) AS asLinewpName1
      , MAX(CASE WHEN al.rownum = 2 THEN COALESCE(pl.[Key],'') ELSE '' END) AS asLineKey2
      , MAX(CASE WHEN al.rownum = 2 THEN COALESCE(pl.[Name],'') ELSE '' END) AS asLineName2
      , MAX(CASE WHEN al.rownum = 2 THEN COALESCE(al.[WorkStation],'') ELSE '' END) AS wpId2
      , MAX(CASE WHEN al.rownum = 2 THEN COALESCE(wp.[WorkPlaceName],al.[WorkStation],'') ELSE '' END) AS wpName2
      , MAX(CASE WHEN al.rownum = 2 THEN COALESCE(pl.[Name] + ' (WP:' + (CASE WHEN wp.[WorkPlaceName] IS NULL THEN al.[WorkStation] ELSE wp.[WorkPlaceName]END)+')','') ELSE '' END) AS asLinewpName2
      , MAX(CASE WHEN al.rownum = 3 THEN COALESCE(pl.[Key],'') ELSE '' END) AS asLineKey3
      , MAX(CASE WHEN al.rownum = 3 THEN COALESCE(pl.[Name],'') ELSE '' END) AS asLineName3
      , MAX(CASE WHEN al.rownum = 3 THEN COALESCE(al.[WorkStation],'') ELSE '' END) AS wpId3
      , MAX(CASE WHEN al.rownum = 3 THEN COALESCE(wp.[WorkPlaceName],al.[WorkStation],'') ELSE '' END) AS wpName3
      , MAX(CASE WHEN al.rownum = 3 THEN COALESCE(pl.[Name] + ' (WP:' + (CASE WHEN wp.[WorkPlaceName] IS NULL THEN al.[WorkStation] ELSE wp.[WorkPlaceName]END) +')','') ELSE '' END) AS asLinewpName3
      , MAX(CASE WHEN al.rownum = 4 THEN COALESCE(pl.[Key],'') ELSE '' END) AS asLineKey4
      , MAX(CASE WHEN al.rownum = 4 THEN COALESCE(pl.[Name],'') ELSE '' END) AS asLineName4
      , MAX(CASE WHEN al.rownum = 4 THEN COALESCE(al.[WorkStation],'') ELSE '' END) AS wpId4
      , MAX(CASE WHEN al.rownum = 4 THEN COALESCE(wp.[WorkPlaceName],al.[WorkStation],'') ELSE '' END) AS wpName4
      , MAX(CASE WHEN al.rownum = 4 THEN COALESCE(pl.[Name] + ' (WP:' + (CASE WHEN wp.[WorkPlaceName] IS NULL THEN al.[WorkStation] ELSE wp.[WorkPlaceName]END) +')','') ELSE '' END) AS asLinewpName4
      , MAX(CASE WHEN al.rownum = 5 THEN COALESCE(pl.[Key],'') ELSE '' END) AS asLineKey5
      , MAX(CASE WHEN al.rownum = 5 THEN COALESCE(pl.[Name],'') ELSE '' END) AS asLineName5
      , MAX(CASE WHEN al.rownum = 5 THEN COALESCE(al.[WorkStation],'') ELSE '' END) AS wpId5
      , MAX(CASE WHEN al.rownum = 5 THEN COALESCE(wp.[WorkPlaceName],al.[WorkStation],'') ELSE '' END) AS wpName5
      , MAX(CASE WHEN al.rownum = 5 THEN COALESCE(pl.[Name] + ' (WP:' + (CASE WHEN wp.[WorkPlaceName] IS NULL THEN al.[WorkStation] ELSE wp.[WorkPlaceName]END) +')','') ELSE '' END) AS asLinewpName5
      FROM [dbo].[AndonRequestCodes] AS rqCodes
      LEFT JOIN al ON al.[AndonRequestCodeId] = rqCodes.[Id]
      LEFT JOIN [dbo].[ProductionLines] AS pl ON al.[ProductionLineId] = pl.[Id]
      LEFT JOIN [dbo].[WorkPlaces] AS wp ON wp.[WorkPlaceSN] = al.[WorkStation] AND wp.[ProductionLineId] = al.[ProductionLineId]
      WHERE (rqCodes.[Code] = @rqCode OR @rqCode = '')
      GROUP BY rqCodes.[Code], [dbo].[DataTranslation](@LCID,rqCodes.[Description])
      );
    </SQLScript>
    <SQLScript Name="MonitorData_AndonRequestQueueWP" SQLconnectionString="@PAR_ANDONDBCS@">
      IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MonitorData_AndonRequestQueueWP]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
      DROP FUNCTION [dbo].[MonitorData_AndonRequestQueueWP]
      GO

      SET ANSI_NULLS ON
      GO

      SET QUOTED_IDENTIFIER ON
      GO

      CREATE FUNCTION [dbo].[MonitorData_AndonRequestQueueWP](@WpName varchar(10), @LCID  varchar(10), @AsLineGroup varchar(10), @IncludeStop BIT = 0)
      RETURNS TABLE
      AS
      RETURN
      (
      WITH
      al AS (
      SELECT
      ROW_NUMBER() OVER (PARTITION BY al.[ProductionLineId],al.[WorkStation] ORDER BY al.[RequestTimeStamp]) AS rownum
      ,COUNT(*) OVER (PARTITION BY al.[ProductionLineId],al.[WorkStation]) AS numofRequests
      ,[ProductionLineId]
      ,[WorkStation]
      ,[AndonRequestCodeId]
      FROM [dbo].[AndonLogs] AS al
      WHERE al.[Active] = 1 AND (al.[WithStop] = 0 OR al.[WithStop] = @IncludeStop)
      )
      , alStop AS (
      SELECT
      COUNT(*) OVER (PARTITION BY al.[ProductionLineId],al.[WorkStation] ) AS withstop
      ,[ProductionLineId]
      ,[WorkStation]
      FROM [dbo].[AndonLogs] AS al
      WHERE al.[Active] = 1 AND al.[WithStop] = 1
      )
      SELECT
      wp.[WorkPlaceSN]
      ,@LCID AS LCID
      , wp.[WorkPlaceName]
      , CASE WHEN wp.[WorkPlaceName] IS NULL THEN CONVERT(varchar(max),wp.[WorkPlaceSN]) ELSE CONVERT(varchar(max),wp.[WorkPlaceSN]) + ' (' + wp.[WorkPlaceName] + ')' END AS wpSNName
      , pl.[Key] AS SAEGGroupKey
      , pl.[Name] AS SAEGGroupName
      , MAX(COALESCE(CONVERT(int,alStop.WithStop),0)) AS numofStopRequests
      , MAX(COALESCE(CONVERT(int,al.numofRequests),0)) AS numofRequests
      , COALESCE(MAX((CASE WHEN al.rownum = 1 THEN rq1.[Code] END)),'') AS rqCode1
      , MAX((CASE WHEN al.rownum = 1 THEN [dbo].[DataTranslation](@LCID,rq1.[Description]) END)) AS rqName1
      , MAX((CASE WHEN al.rownum = 1 THEN [dbo].[DataTranslation](@LCID,rq1.[Description]) +' (' +rq1.[Code]+ ')' END)) AS rqCodeName1
      , COALESCE(MAX((CASE WHEN al.rownum = 2 THEN rq2.[Code] END)),'') AS rqCode2
      , MAX((CASE WHEN al.rownum = 2 THEN [dbo].[DataTranslation](@LCID,rq2.[Description]) END)) AS rqName2
      , MAX((CASE WHEN al.rownum = 2 THEN [dbo].[DataTranslation](@LCID,rq2.[Description]) +' (' +rq2.[Code]+ ')' END)) AS rqCodeName2
      , COALESCE(MAX((CASE WHEN al.rownum = 3 THEN rq3.[Code] END)),'') AS rqCode3
      , MAX((CASE WHEN al.rownum = 3 THEN [dbo].[DataTranslation](@LCID,rq3.[Description]) END)) AS rqName3
      , MAX((CASE WHEN al.rownum = 3 THEN [dbo].[DataTranslation](@LCID,rq3.[Description])  +' (' +rq3.[Code]+ ')' END)) AS rqCodeName3
      , COALESCE(MAX((CASE WHEN al.rownum = 4 THEN rq4.[Code] END)),'') AS rqCode4
      , MAX((CASE WHEN al.rownum = 4 THEN [dbo].[DataTranslation](@LCID,rq4.[Description])  END)) AS rqName4
      , MAX((CASE WHEN al.rownum = 4 THEN [dbo].[DataTranslation](@LCID,rq4.[Description])  +' (' +rq4.[Code]+ ')' END)) AS rqCodeName4
      , COALESCE(MAX((CASE WHEN al.rownum = 5 THEN rq5.[Code] END)),'') AS rqCode5
      , MAX((CASE WHEN al.rownum = 5 THEN [dbo].[DataTranslation](@LCID,rq5.[Description]) END)) AS rqName5
      , MAX((CASE WHEN al.rownum = 5 THEN [dbo].[DataTranslation](@LCID,rq5.[Description]) +' (' +rq5.[Code]+ ')' END)) AS rqCodeName5
      FROM [dbo].[WorkPlaces] AS wp
      LEFT JOIN [dbo].[ProductionLines] AS pl ON wp.[ProductionLineId] = pl.[Id]
      LEFT JOIN al ON al.[ProductionLineId] = pl.[Id] AND al.[WorkStation] = wp.[WorkPLaceSN]
      LEFT JOIN alStop ON alStop.[ProductionLineId] = pl.[Id] AND alStop.[WorkStation] = wp.[WorkPLaceSN]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq1 ON rq1.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq2 ON rq2.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq3 ON rq3.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq4 ON rq4.[Id] = al.[AndonRequestCodeId]
      LEFT JOIN [dbo].[AndonRequestCodes] AS rq5 ON rq5.[Id] = al.[AndonRequestCodeId]
      WHERE (wp.[WorkPlaceName] = @WpName OR @WpName = '') AND (pl.[Description] LIKE '%'+@AsLineGroup+'%' OR @AsLineGroup = '')
      GROUP BY pl.[Key]
      , pl.[Name]
      , wp.[WorkPlaceName]
      , wp.[WorkPlaceSN]
      , CASE WHEN wp.[WorkPlaceName] IS NULL THEN CONVERT(varchar(max),wp.[WorkPlaceSN]) ELSE CONVERT(varchar(max),wp.[WorkPlaceSN]) + ' (' + wp.[WorkPlaceName] + ')' END
      );
    </SQLScript>
    <SQLScript Name="DataTranslation" SQLconnectionString="@PAR_ANDONDBCS@">
      IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DataTranslation]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
      DROP FUNCTION [dbo].[DataTranslation]
      GO

      SET ANSI_NULLS ON
      GO

      SET QUOTED_IDENTIFIER ON
      GO

      CREATE FUNCTION [dbo].[DataTranslation] (@LC nvarchar(max), @WC nvarchar(max))
      RETURNS nvarchar(max)
      WITH EXECUTE AS CALLER
      AS
      BEGIN
      RETURN (SELECT [Text] FROM [dbo].[i18nTranslations] WHERE [Language_LanguageCode] = @LC AND [Word_WordCode] = @WC);
      END;
    </SQLScript>
  </InitialSQLScripts>
</DataToRedisConfig>